{"version":3,"sources":["ApplicationBar.js","Data.context.js","Stage.js","Stages.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","logo","height","paddingRight","_ref","classes","react_default","a","createElement","className","index_es","position","variant","src","alt","color","DataContext","React","createContext","DataContextProvider","children","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","activeStage","setActiveStage","value","loadData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","tsv","_data","wrap","_context","prev","next","fetch","sent","text","split","map","row","cell","replace","filter","length","stop","apply","this","arguments","getStageLabel","_ref4","stageIndex","getStageContent","_ref5","stageNext","prevActiveStage","stageBack","stageReset","getSectionTitle","_ref3","sectionIndex","Provider","Stage","props","objectWithoutProperties","_useContext","useContext","label","content","slice","section","sectionTitle","react_markdown_default","escapeHtml","source","assign","onClick","Stages","stages","stageData","index","src_Stage","key","activeStep","orientation","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","typography","useNextVariants","App","styles","src_ApplicationBar","src_Stages","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45eba584.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst ApplicationBar = ({\n  classes,\n}) => {\n  const title = 'Gateway Language Translation Process'\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <img className={classes.logo} src=\"./logo.png\" alt=\"unfoldingWord\" />\n          <Typography variant=\"h6\" color=\"inherit\">\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nApplicationBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  logo: {\n    height: '1.8em',\n    paddingRight: '0.5em',\n  },\n};\n\nexport default withStyles(styles)(ApplicationBar);\n","import React, {useState} from 'react';\n\n\nexport const DataContext = React.createContext();\n\nexport function DataContextProvider({children}) {\n  const [data, setData] = useState([]);\n  const [activeStage, setActiveStage] = useState(0);\n\n  const loadData = async () => {\n    const response = await fetch('./data.tsv');\n    const tsv = await response.text();\n    const _data = tsv.split('\\n')\n    .map(row =>\n      row.split('\\t').map(cell =>\n        cell.replace(/<br>/gi, '\\n')\n      )\n    ).filter(row => row[0].length > 0 && row.length > 1);\n    setData(_data);\n  };\n\n  const getSectionTitle = ({sectionIndex}) => {\n    return data[0][sectionIndex];\n  };\n\n  const getStageLabel = ({stageIndex}) => {\n    return data[stageIndex][0];\n  };\n\n  const getStageContent = ({stageIndex}) => {\n    return data[stageIndex];\n  };\n\n  const stageNext = () => {\n    setActiveStage(prevActiveStage => prevActiveStage + 1);\n  };\n\n  const stageBack = () => {\n    setActiveStage(prevActiveStage => prevActiveStage - 1);\n  };\n\n  const stageReset = () => {\n    setActiveStage(0);\n  };\n\n  const value = {\n    data,\n    loadData,\n    getStageLabel,\n    getStageContent,\n    activeStage,\n    setActiveStage,\n    stageNext,\n    stageBack,\n    stageReset,\n    getSectionTitle,\n  };\n\n  return (\n    <DataContext.Provider value={value}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n","import React, {useContext} from 'react';\nimport {\n  Step,\n  StepLabel,\n  StepContent,\n  Typography,\n} from '@material-ui/core';\nimport ReactMarkdown from 'react-markdown';\n\nimport {DataContext} from './Data.context';\n\nfunction Stage({\n  stageIndex,\n  ...props\n}) {\n  const {\n    activeStage,\n    setActiveStage,\n    getStageLabel,\n    getStageContent,\n    getSectionTitle,\n  } = useContext(DataContext);\n  const label = getStageLabel({stageIndex: stageIndex + 1});\n  const contentData = getStageContent({stageIndex: stageIndex + 1});\n  const content = contentData.slice(1).map((section, sectionIndex) => {\n    const sectionTitle = getSectionTitle({sectionIndex: sectionIndex + 1});\n    return (\n      <div>\n        <Typography variant='h6'>{sectionTitle}</Typography>\n        <ReactMarkdown\n          escapeHtml={false}\n          source={section}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <Step {...props} onClick={()=>setActiveStage(stageIndex)}>\n      <StepLabel>\n        {label}\n      </StepLabel>\n      <StepContent>\n        <Typography>{content}</Typography>\n      </StepContent>\n    </Step>\n  );\n};\n\nexport default Stage;\n","import React, {useContext} from 'react';\nimport {\n  Stepper,\n} from '@material-ui/core';\n\nimport Stage from './Stage';\n\nimport {DataContext} from './Data.context';\n\nfunction Stages() {\n  const {data, loadData, activeStage} = useContext(DataContext);\n  if (data.length === 0) loadData();\n\n  const stages = data.slice(1).map((stageData, index) =>\n    <Stage key={index} stageIndex={index} />\n  );\n\n  return (\n    <Stepper activeStep={activeStage} orientation=\"vertical\">\n      {stages}\n    </Stepper>\n  );\n};\n\nexport default Stages;\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport './App.css';\n\nimport ApplicationBar from './ApplicationBar';\nimport Stages from './Stages'\n\nimport {DataContextProvider} from './Data.context';\n\nfunction App() {\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <DataContextProvider>\n        <ApplicationBar />\n        <Stages />\n      </DataContextProvider>\n    </MuiThemeProvider>\n  );\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#59B7E7',\n      main: '#31ADE3',\n      dark: '#014263',\n      contrastText: '#FFF'\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}